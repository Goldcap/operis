{
  "name": "symlink-or-copy",
  "description": "Symlink files or directories, falling back to copying on Windows",
  "version": "1.0.0",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "main": "index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/broccolijs/node-symlink-or-copy"
  },
  "dependencies": {
    "copy-dereference": "^1.0.0"
  },
  "readme": "# node-symlink-or-copy\n\nSymlink a file or directory to another place. Fall back to copying on Windows.\nMade for use with Broccoli plugins, for \"do what I mean\" behavior.\n\n## Installation\n\n```sh\nnpm install --save symlink-or-copy\n```\n\n## Example\n\n```js\nvar symlinkOrCopySync = require('symlink-or-copy').sync;\n\nsymlinkOrCopySync('src_dir/some_file.txt', 'dest_dir/some_file.txt');\nsymlinkOrCopySync('src_dir/some_dir', 'dest_dir/some_dir');\n```\n\n## Description\n\n```js\nsymlinkOrCopySync(srcPath, destPath)\n```\n\nCreate a symlink at `destPath` pointing to `srcPath`.\n\nOn Windows, we may fall back to copying `srcPath` to `destPath`, preserving\nlast-modified times. However, do not *rely* on always getting a copy on\nWindows (see Notes below).\n\nIf you pass a relative `srcPath`, it will be resolved relative to\n`process.cwd()`, akin to a copy function. Note that this is unlike\n[`fs.symlinkSync`](http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback),\nwhose `srcPath` is relative to `destPath`.\n\nIf `srcPath` does not exist or is a broken symlink, we might throw an\nexception, or we might create a broken symlink.\n\nWhen we fall back to copying, symlinks at or beneath `srcPath` will be\ndereferenced, and broken symlinks will cause exceptions.\n\nWe will throw an exception if `destPath` already exists. Thus in contrast to\nUnix `cp` or `ln`, the following will fail:\n\n```js\n// dest_dir already exists, and we might expect dest_dir/some_dir to be\n// created. This does not work; pass 'dest_dir/some_dir' instead.\nsymlinkOrCopySync('src_dir/some_dir', 'dest_dir');\n```\n\nIt is an error if the parent directory of `destPath` does not already exist.\n\nWhen we symlink, if the file at `srcPath` is a symlink as well, it will be\ndereferenced before symlinking, to avoid runaway symlink indirection.\n\n## Notes\n\n* Symlinks could technically work on Windows, but they require special rights.\nThere are also junctions, but it's not clear whether they are useful. We might\nwant to be smarter about using symlinks on Windows when we can, but at the\nmoment we opt for the simplest solution (always copying), even though it\nsacrifices performance on Windows.\n\n* There intentionally isn't an asynchronous version. It's not clear that we\nneed or want one. Before sending a patch to add an async version, please share\nyour use case on the issue tracker.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/broccolijs/node-symlink-or-copy/issues"
  },
  "homepage": "https://github.com/broccolijs/node-symlink-or-copy",
  "_id": "symlink-or-copy@1.0.0",
  "_from": "symlink-or-copy@^1.0.0"
}
